# This file was automatically generated by mill-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your mill build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ["**", "!update/**", "!pr/**"]
  push:
    branches: ["**", "!update/**", "!pr/**"]
    tags: [v*]

env:
  PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  SONATYPE_CREDENTIAL_HOST: ${{ secrets.SONATYPE_CREDENTIAL_HOST }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  PGP_SECRET: ${{ secrets.PGP_SECRET }}

jobs:
  publish:
    name: Publish Artifacts
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.20]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Java (temurin@11)
        id: download-java-temurin-11
        if: matrix.java == 'temurin@11'
        uses: typelevel/download-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v4
        with:
          distribution: jdkfile
          java-version: 11
          jdkFile: ${{ steps.download-java-temurin-11.outputs.jdkFile }}

      - name: Cache mill
        uses: actions/cache@v4
        with:
          path: |
            ~/.mill
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-mill-cache-v2-${{ hashFiles('**/*.mill') }}-${{ hashFiles('project/build.properties') }}

      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.PGP_SECRET }}
          passphrase: ${{ secrets.PGP_PASSPHRASE }}
          trust_level: 5
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
        with:
          limit-access-to-actor: true
          limit-access-to-users: nightscape

      - name: Publish
        run: |
          export GPG_TTY=$(tty)
          ./mill -i mill.contrib.sonatypecentral.SonatypeCentralPublishModule/publishAll \
            --publishArtifacts __.publishArtifacts \
            --username $SONATYPE_USERNAME \
            --password $SONATYPE_PASSWORD \
            --gpgArgs "--passphrase=$PGP_PASSPHRASE,--no-tty,--pinentry-mode,loopback,--batch,--yes,-a,-b" \
            --bundleName dev.mauch-spark-excel-$(date +%Y-%m-%d-%H-%M)
